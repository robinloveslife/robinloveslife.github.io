<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>sql server证书加密解密</title>
    <url>/2020/08/01/addkey/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="加密前"><a href="#加密前" class="headerlink" title="加密前"></a>加密前</h2><ul>
<li>drop 了证书和对称密钥</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li></li>
</ol>
<ul>
<li>use dbname;</li>
<li>–创建master key</li>
<li>CREATE MASTER KEY ENCRYPTION BY PASSWORD =’password’;</li>
</ul>
<ol start="2">
<li></li>
</ol>
<ul>
<li>use dbname;</li>
<li>–创建证书</li>
<li>CREATE CERTIFICATE 证书名字 </li>
<li>with SUBJECT = ‘Certificate’</li>
<li>GO</li>
</ul>
<ol start="3">
<li></li>
</ol>
<ul>
<li>use dbname;</li>
<li>–由证书加密对称密钥</li>
<li>CREATE SYMMETRIC KEY 密钥名字</li>
<li>WITH ALGORITHM = AES_256</li>
<li>ENCRYPTION BY CERTIFICATE 证书名字;</li>
<li>GO</li>
</ul>
<ol start="4">
<li></li>
</ol>
<ul>
<li>use dbname;</li>
<li>–打开对称密钥</li>
<li>OPEN SYMMETRIC KEY 密钥名字 DECRYPTION BY CERTIFICATE 证书名字;</li>
</ul>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><ul>
<li><a href="https://www.cnblogs.com/wolfocme110/p/4016035.html">https://www.cnblogs.com/wolfocme110/p/4016035.html</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>vue页面组件化-父子组件传值</title>
    <url>/2020/08/03/components/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>页面组件化涉及到父子组件传值的问题，需要用到props和emit</p>
</blockquote>
<ul>
<li>父组件引</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Dialog</span><br><span class="line">    :dialogVisible&#x3D;&quot;visible&quot;   &#x2F;&#x2F;需要向子组件传值的属性</span><br><span class="line">    :title&#x3D;&quot;title&quot;</span><br><span class="line">:width&#x3D;&quot;width&quot;</span><br><span class="line">    @changeVisible&#x3D;&quot;changeV&quot;   &#x2F;&#x2F;子组件向父组件传值及操作的途径方法</span><br><span class="line">&#x2F;&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import Dialog from &quot;@&#x2F;newsModules&#x2F;noticeDialog&quot;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">components: &#123;</span><br><span class="line">    Dialog</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data里</span><br><span class="line">visible：false,</span><br><span class="line">title:&quot;&quot;,</span><br><span class="line">width:&quot;&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">changeV(e) &#123;</span><br><span class="line">    this.visible &#x3D; e;    &#x2F;&#x2F;e是从子组件传过来的值</span><br><span class="line">    this.getNoticeData(); &#x2F;&#x2F;子组件传值的同时调用父组件的初始化方法来刷新父组件的值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>子组件定义</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">balabala(组件代码)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">props: &#123;    &#x2F;&#x2F;用props定义需要从父组件接收值的变量</span><br><span class="line">    dialogVisible: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false</span><br><span class="line">    &#125;,</span><br><span class="line">    title: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    width: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">handleClose() &#123;</span><br><span class="line">    this.$emit(&quot;changeVisible&quot;, false);  &#x2F;&#x2F;把false作为值传给changeVisible方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>el-table分页</title>
    <url>/2020/08/04/el-table%E5%88%86%E9%A1%B5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>注意：total一定要赋值</p>
</blockquote>
<ol>
<li>el-table属性</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:data&#x3D;&quot;tableData.slice((currentPage-1)*pagesize,currentPage*pagesize)&quot;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>分页代码</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;text-align: center;margin-top: 30px;&quot;&gt;</span><br><span class="line">    &lt;el-pagination</span><br><span class="line">        background</span><br><span class="line">        layout&#x3D;&quot;prev, pager, next&quot;</span><br><span class="line">        :total&#x3D;&quot;total&quot;</span><br><span class="line">        @current-change&#x3D;&quot;current_change&quot;</span><br><span class="line">    &gt;&lt;&#x2F;el-pagination&gt;</span><br><span class="line">&lt;&#x2F;div</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>data中定义</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">total: 0,</span><br><span class="line">pagesize: 10,</span><br><span class="line">currentPage: 1</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>methods中定义</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">current_change: function (currentPage) &#123;</span><br><span class="line">    this.currentPage &#x3D; currentPage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>杂</title>
    <url>/2020/07/20/frontendbalabala/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><ul>
<li>主要看稳定性</li>
</ul>
<h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul>
<li><p>前端主要工作之一，解决浏览器的兼容性</p>
</li>
<li><p>内核 </p>
<ul>
<li><p>ie-内核：trident</p>
</li>
<li><p>ie edge-内核：斯巴达</p>
</li>
<li><p>火狐(firefox)-内核：gecko</p>
</li>
<li><p>苹果(safari)-内核：webkit</p>
</li>
<li><p>谷歌(chrome)-内核：blink</p>
</li>
<li><p>欧朋(opera)-内核：blink</p>
</li>
</ul>
</li>
<li><p>从服务器接收数据存放在一个临时文件夹</p>
</li>
</ul>
<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><ul>
<li><p>sublime</p>
<ul>
<li>快捷键<ul>
<li>html:xt|5+tab 快速生成html骨架</li>
<li>标签名+tab 快速生成标签对</li>
<li>p*数量+tab 快速生成一定数量的同种标签</li>
<li>按住滚轮拖动 选中多行进行同时编辑</li>
<li>shift+ctrl+↑ 上移当前行</li>
<li>shift+ctrl+↓  下移当前行</li>
<li>ctrl+shift+S 另存为</li>
<li>ctrl+/ 注释</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>vs code<ul>
<li>快捷键<ul>
<li>！+tab / html:xt|5+tab 快速生成html骨架</li>
<li>标签名+tab 快速生成标签对</li>
<li>p*数量+tab 快速生成一定数量的同种标签</li>
<li>alt+shift+鼠标左键 选中多行进行同时编辑</li>
<li>alt+↑ 上移当前行</li>
<li>alt+↓  下移当前行</li>
<li>ctrl+shift+S 另存为</li>
<li>ctrl+/ 注释</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h3><p>(DocType Definition)文档类型定义</p>
<h3 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h3><p>国际网站 用utf-8</p>
<p>国内，有大量中文 用GBK/gb2312</p>
<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul>
<li>必需属性 如 img里的src alt</li>
<li>可选属性 如 img里的width height</li>
<li>标准属性 如id class style lang</li>
<li>事件属性 如 onclick onmouseover</li>
</ul>
<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><ul>
<li>相对路径：目标文件相对引用文件所在位置 / ./ ../</li>
<li>绝对路径： 目标文件所在完全路径 d:/xxx/xxx</li>
</ul>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><ul>
<li>href：地址</li>
<li>title：提示信息</li>
<li>rel：规定当前文档与被链接文档之间关系</li>
<li>download：规定被下载的超链接的目标</li>
<li>media：规定被链接文档为何种媒介优化</li>
<li>type：规定被链接文档的MIME类型</li>
<li>target：<ul>
<li>_self：在当前页面打开新页面</li>
<li>_blank：在新的页面打开</li>
<li>_parent：页面的父窗口打开</li>
<li>_top：将页面在整个浏览器窗口打开</li>
<li>_framename 在指定的框架中打开</li>
</ul>
</li>
</ul>
<p>=======================================================</p>
]]></content>
  </entry>
  <entry>
    <title>fullEditer</title>
    <url>/2020/07/25/fullEditer/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li>用</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Editor v-model&#x3D;&quot;noticeContent&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>引</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import Editor from &#39;@&#x2F;components&#x2F;Editor&#39;;</span><br><span class="line">components: &#123;</span><br><span class="line">    Editor</span><br><span class="line">&#125;</span><br><span class="line">noticeContent:&quot;&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>源</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 图片上传组件辅助 --&gt;</span><br><span class="line">    &lt;el-upload</span><br><span class="line">      class&#x3D;&quot;avatar-uploader quill-img&quot;</span><br><span class="line">      :action&#x3D;&quot;uploadImgUrl&quot;</span><br><span class="line">      name&#x3D;&quot;file&quot;</span><br><span class="line">      :headers&#x3D;&quot;headers&quot;</span><br><span class="line">      :show-file-list&#x3D;&quot;false&quot;</span><br><span class="line">      :on-success&#x3D;&quot;quillImgSuccess&quot;</span><br><span class="line">      :on-error&#x3D;&quot;uploadError&quot;</span><br><span class="line">      :before-upload&#x3D;&quot;quillImgBefore&quot;</span><br><span class="line">      accept&#x3D;&quot;.jpg, .jpeg, .png, .gif&quot;</span><br><span class="line">    &gt;&lt;&#x2F;el-upload&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 富文本组件 --&gt;</span><br><span class="line">    &lt;quill-editor</span><br><span class="line">      class&#x3D;&quot;editor&quot;</span><br><span class="line">      v-model&#x3D;&quot;content&quot;</span><br><span class="line">      ref&#x3D;&quot;quillEditor&quot;</span><br><span class="line">      :options&#x3D;&quot;editorOption&quot;</span><br><span class="line">      @blur&#x3D;&quot;onEditorBlur($event)&quot;</span><br><span class="line">      @focus&#x3D;&quot;onEditorFocus($event)&quot;</span><br><span class="line">      @change&#x3D;&quot;onEditorChange($event)&quot;</span><br><span class="line">    &gt;&lt;&#x2F;quill-editor&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; getToken &#125; from &quot;@&#x2F;utils&#x2F;auth&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 工具栏配置</span><br><span class="line">const toolbarOptions &#x3D; [</span><br><span class="line">  [&quot;bold&quot;, &quot;italic&quot;, &quot;underline&quot;, &quot;strike&quot;], &#x2F;&#x2F; 加粗 斜体 下划线 删除线</span><br><span class="line">  [&quot;blockquote&quot;, &quot;code-block&quot;], &#x2F;&#x2F; 引用  代码块</span><br><span class="line">  [&#123; list: &quot;ordered&quot; &#125;, &#123; list: &quot;bullet&quot; &#125;], &#x2F;&#x2F; 有序、无序列表</span><br><span class="line">  [&#123; indent: &quot;-1&quot; &#125;, &#123; indent: &quot;+1&quot; &#125;], &#x2F;&#x2F; 缩进</span><br><span class="line">  [&#123; size: [&quot;small&quot;, false, &quot;large&quot;, &quot;huge&quot;] &#125;], &#x2F;&#x2F; 字体大小</span><br><span class="line">  [&#123; header: [1, 2, 3, 4, 5, 6, false] &#125;], &#x2F;&#x2F; 标题</span><br><span class="line">  [&#123; color: [] &#125;, &#123; background: [] &#125;], &#x2F;&#x2F; 字体颜色、字体背景颜色</span><br><span class="line">  [&#123; align: [] &#125;], &#x2F;&#x2F; 对齐方式</span><br><span class="line">  [&quot;clean&quot;], &#x2F;&#x2F; 清除文本格式</span><br><span class="line">  [&quot;link&quot;, &quot;image&quot;, &quot;video&quot;], &#x2F;&#x2F; 链接、图片、视频</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">import &#123; quillEditor &#125; from &quot;vue-quill-editor&quot;;</span><br><span class="line">import &quot;quill&#x2F;dist&#x2F;quill.core.css&quot;;</span><br><span class="line">import &quot;quill&#x2F;dist&#x2F;quill.snow.css&quot;;</span><br><span class="line">import &quot;quill&#x2F;dist&#x2F;quill.bubble.css&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    &#x2F;* 编辑器的内容 *&#x2F;</span><br><span class="line">    value: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;* 图片大小 *&#x2F;</span><br><span class="line">    maxSize: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 4000, &#x2F;&#x2F;kb</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123; quillEditor &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      content: this.value,</span><br><span class="line">      uploadImgUrl: &quot;&quot;,</span><br><span class="line">      editorOption: &#123;</span><br><span class="line">        placeholder: &quot;&quot;,</span><br><span class="line">        theme: &quot;snow&quot;, &#x2F;&#x2F; or &#39;bubble&#39;</span><br><span class="line">        placeholder: &quot;请输入内容&quot;,</span><br><span class="line">        modules: &#123;</span><br><span class="line">          toolbar: &#123;</span><br><span class="line">            container: toolbarOptions,</span><br><span class="line">            handlers: &#123;</span><br><span class="line">              image: function (value) &#123;</span><br><span class="line">                if (value) &#123;</span><br><span class="line">                  &#x2F;&#x2F; 触发input框选择图片文件</span><br><span class="line">                  document.querySelector(&quot;.quill-img input&quot;).click();</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                  this.quill.format(&quot;image&quot;, false);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      uploadImgUrl: process.env.VUE_APP_BASE_API + &quot;&#x2F;common&#x2F;upload&quot;, &#x2F;&#x2F; 上传的图片服务器地址（这个地方注意）</span><br><span class="line">      headers: &#123;</span><br><span class="line">        Authorization: &quot;Bearer &quot; + getToken(),（这个地方注意）</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    value: function () &#123;</span><br><span class="line">      this.content &#x3D; this.value;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    onEditorBlur() &#123;</span><br><span class="line">      &#x2F;&#x2F;失去焦点事件</span><br><span class="line">    &#125;,</span><br><span class="line">    onEditorFocus() &#123;</span><br><span class="line">      &#x2F;&#x2F;获得焦点事件</span><br><span class="line">    &#125;,</span><br><span class="line">    onEditorChange() &#123;</span><br><span class="line">      &#x2F;&#x2F;内容改变事件</span><br><span class="line">      this.$emit(&quot;input&quot;, this.content);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 富文本图片上传前</span><br><span class="line">    quillImgBefore(file) &#123;</span><br><span class="line">      let fileType &#x3D; file.type;</span><br><span class="line">      if (fileType &#x3D;&#x3D;&#x3D; &quot;image&#x2F;jpeg&quot; || fileType &#x3D;&#x3D;&#x3D; &quot;image&#x2F;png&quot;) &#123;</span><br><span class="line">        return true;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.$message.error(&quot;请插入图片类型文件(jpg&#x2F;jpeg&#x2F;png)&quot;);</span><br><span class="line">        return false;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    quillImgSuccess(res, file) &#123;</span><br><span class="line">      &#x2F;&#x2F; res为图片服务器返回的数据</span><br><span class="line">      &#x2F;&#x2F; 获取富文本组件实例</span><br><span class="line">      let quill &#x3D; this.$refs.quillEditor.quill;</span><br><span class="line">      &#x2F;&#x2F; 如果上传成功</span><br><span class="line">      if (res.code &#x3D;&#x3D; 200) &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取光标所在位置</span><br><span class="line">        let length &#x3D; quill.getSelection().index;</span><br><span class="line">        &#x2F;&#x2F; 插入图片  res.url为服务器返回的图片地址</span><br><span class="line">        quill.insertEmbed(length, &quot;image&quot;, res.url);</span><br><span class="line">        &#x2F;&#x2F; 调整光标到最后</span><br><span class="line">        quill.setSelection(length + 1);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.$message.error(&quot;图片插入失败&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 富文本图片上传失败</span><br><span class="line">    uploadError() &#123;</span><br><span class="line">      &#x2F;&#x2F; loading动画消失</span><br><span class="line">      this.$message.error(&quot;图片插入失败&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt; </span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.editor &#123;</span><br><span class="line">  line-height: normal !important;</span><br><span class="line">  height: 692px;</span><br><span class="line">&#125;</span><br><span class="line">.quill-img &#123;</span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-tooltip[data-mode&#x3D;&quot;link&quot;]::before &#123;</span><br><span class="line">  content: &quot;请输入链接地址:&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-tooltip.ql-editing a.ql-action::after &#123;</span><br><span class="line">  border-right: 0px;</span><br><span class="line">  content: &quot;保存&quot;;</span><br><span class="line">  padding-right: 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ql-snow .ql-tooltip[data-mode&#x3D;&quot;video&quot;]::before &#123;</span><br><span class="line">  content: &quot;请输入视频地址:&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ql-snow .ql-picker.ql-size .ql-picker-label::before,</span><br><span class="line">.ql-snow .ql-picker.ql-size .ql-picker-item::before &#123;</span><br><span class="line">  content: &quot;14px&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-size .ql-picker-label[data-value&#x3D;&quot;small&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-size .ql-picker-item[data-value&#x3D;&quot;small&quot;]::before &#123;</span><br><span class="line">  content: &quot;10px&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-size .ql-picker-label[data-value&#x3D;&quot;large&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-size .ql-picker-item[data-value&#x3D;&quot;large&quot;]::before &#123;</span><br><span class="line">  content: &quot;18px&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-size .ql-picker-label[data-value&#x3D;&quot;huge&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-size .ql-picker-item[data-value&#x3D;&quot;huge&quot;]::before &#123;</span><br><span class="line">  content: &quot;32px&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-label::before,</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-item::before &#123;</span><br><span class="line">  content: &quot;文本&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-label[data-value&#x3D;&quot;1&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-item[data-value&#x3D;&quot;1&quot;]::before &#123;</span><br><span class="line">  content: &quot;标题1&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-label[data-value&#x3D;&quot;2&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-item[data-value&#x3D;&quot;2&quot;]::before &#123;</span><br><span class="line">  content: &quot;标题2&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-label[data-value&#x3D;&quot;3&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-item[data-value&#x3D;&quot;3&quot;]::before &#123;</span><br><span class="line">  content: &quot;标题3&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-label[data-value&#x3D;&quot;4&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-item[data-value&#x3D;&quot;4&quot;]::before &#123;</span><br><span class="line">  content: &quot;标题4&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-label[data-value&#x3D;&quot;5&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-item[data-value&#x3D;&quot;5&quot;]::before &#123;</span><br><span class="line">  content: &quot;标题5&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-label[data-value&#x3D;&quot;6&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-header .ql-picker-item[data-value&#x3D;&quot;6&quot;]::before &#123;</span><br><span class="line">  content: &quot;标题6&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ql-snow .ql-picker.ql-font .ql-picker-label::before,</span><br><span class="line">.ql-snow .ql-picker.ql-font .ql-picker-item::before &#123;</span><br><span class="line">  content: &quot;标准字体&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-font .ql-picker-label[data-value&#x3D;&quot;serif&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-font .ql-picker-item[data-value&#x3D;&quot;serif&quot;]::before &#123;</span><br><span class="line">  content: &quot;衬线字体&quot;;</span><br><span class="line">&#125;</span><br><span class="line">.ql-snow .ql-picker.ql-font .ql-picker-label[data-value&#x3D;&quot;monospace&quot;]::before,</span><br><span class="line">.ql-snow .ql-picker.ql-font .ql-picker-item[data-value&#x3D;&quot;monospace&quot;]::before &#123;</span><br><span class="line">  content: &quot;等宽字体&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>import export example</title>
    <url>/2020/07/26/import-export/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li>导出</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;btnExport&quot;&gt;导出&lt;&#x2F;el-button&gt;</span><br><span class="line"></span><br><span class="line">btnExport() &#123;</span><br><span class="line">      let queryParam &#x3D; &#123;&#125;;</span><br><span class="line">      api.exportData(queryParam, response &#x3D;&gt; &#123;</span><br><span class="line">        if (response.data.statusMessage &#x3D;&#x3D;&#x3D; &quot;-1&quot;) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            showClose: true,</span><br><span class="line">            message: &quot;导出失败&quot;,</span><br><span class="line">            type: &quot;error&quot;</span><br><span class="line">          &#125;);</span><br><span class="line">          return;</span><br><span class="line">        &#125;</span><br><span class="line">        this.doDownload(response.request.responseURL);</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          showClose: true,</span><br><span class="line">          message: &quot;导出成功！&quot;,</span><br><span class="line">          type: &quot;success&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    doDownload(src) &#123;</span><br><span class="line">      var a &#x3D; document.createElement(&quot;a&quot;);</span><br><span class="line">      a.href &#x3D; src;</span><br><span class="line">      document.body.appendChild(a);</span><br><span class="line">      a.click();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>导入</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;btnImport&quot;&gt;导入&lt;&#x2F;el-button&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">btnImport() &#123;</span><br><span class="line">    this.importVisible &#x3D; true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;td-dialog</span><br><span class="line">      :visible&#x3D;&quot;importVisible&quot;</span><br><span class="line">      v-dialogDrag</span><br><span class="line">      :title&#x3D;&quot;IMPORT&quot;</span><br><span class="line">      width&#x3D;&quot;25%&quot;</span><br><span class="line">      :before-close&#x3D;&quot;importDialogClose&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-row&gt;</span><br><span class="line">        &lt;el-col :span&#x3D;&quot;16&quot; style&#x3D;&quot;margin-top:10px;margin-bottom:5px;&quot;&gt;</span><br><span class="line">          &lt;td-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;chooseFile&quot;&gt;&#123;&#123;SELECTFILE&#125;&#125;&lt;&#x2F;td-button&gt;</span><br><span class="line">          &lt;td-button @click&#x3D;&quot;upLoadFile&quot;&gt;&#123;&#123;UPLOADFILE&#125;&#125;&lt;&#x2F;td-button&gt;</span><br><span class="line">        &lt;&#x2F;el-col&gt;</span><br><span class="line">        &lt;el-col style&#x3D;&quot;margin-bottom:30px;&quot;&gt;</span><br><span class="line">          &lt;span style&#x3D;&quot;font-size:10px;&quot;&gt;&#123;&#123;ONLIEXCEL&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;el-col&gt;</span><br><span class="line">        &lt;el-col style&#x3D;&quot;margin-bottom:30px;text-align:center&quot;&gt;</span><br><span class="line">          &lt;span style&#x3D;&quot;font-size:14px; color:#666&quot;&gt;&#123;&#123;uploadFileName&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">          &lt;td-button</span><br><span class="line">            @click&#x3D;&quot;removeFile&quot;</span><br><span class="line">            type&#x3D;&quot;text&quot;</span><br><span class="line">            size&#x3D;&quot;small&quot;</span><br><span class="line">            v-show&#x3D;&quot;uploadFileName !&#x3D; &#39;&#39;&quot;</span><br><span class="line">            style&#x3D;&quot;font-size:14px; color:#000; padding-left: 30px&quot;</span><br><span class="line">          &gt;&#123;&#123;DELFILE&#125;&#125;&lt;&#x2F;td-button&gt;</span><br><span class="line">          &lt;input type&#x3D;&quot;file&quot; id&#x3D;&quot;btn_file&quot; style&#x3D;&quot;display:none&quot; accept&#x3D;&quot;.xls&quot; ref&#x3D;&quot;btnFile&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-col&gt;</span><br><span class="line">      &lt;&#x2F;el-row&gt;</span><br><span class="line">      &lt;span slot&#x3D;&quot;footer&quot; class&#x3D;&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;td-button @click&#x3D;&quot;importTemplate&quot;&gt;&#123;&#123;IMPORTMODELDOWNLOAD&#125;&#125;&lt;&#x2F;td-button&gt;</span><br><span class="line">        &lt;td-button @click&#x3D;&quot;importCancel&quot;&gt;&#123;&#123;CANCEL&#125;&#125;&lt;&#x2F;td-button&gt;</span><br><span class="line">      &lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;td-dialog&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import api from &quot;@&#x2F;assets&#x2F;api&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    importVisible: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      IMPORT: this.$t(&quot;sightWordImportDialog.IMPORT&quot;),</span><br><span class="line">      SELECTFILE: this.$t(&quot;sightWordImportDialog.SELECTFILE&quot;),</span><br><span class="line">      UPLOADFILE: this.$t(&quot;sightWordImportDialog.UPLOADFILE&quot;),</span><br><span class="line">      ONLIEXCEL: this.$t(&quot;sightWordImportDialog.ONLIEXCEL&quot;),</span><br><span class="line">      DELFILE: this.$t(&quot;sightWordImportDialog.DELFILE&quot;),</span><br><span class="line">      IMPORTMODELDOWNLOAD: this.$t(&quot;sightWordImportDialog.IMPORTMODELDOWNLOAD&quot;),</span><br><span class="line">      CANCEL: this.$t(&quot;sightWordImportDialog.CANCEL&quot;),</span><br><span class="line">      uploadFileName: &quot;&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    importDialogClose() &#123;</span><br><span class="line">      this.$emit(&quot;importDialogClose&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">    importTemplate() &#123;</span><br><span class="line">      let aTag &#x3D; document.createElement(&quot;a&quot;);</span><br><span class="line">      aTag.href &#x3D;</span><br><span class="line">        &quot;http:&#x2F;&#x2F;192.168.96.44:7000&#x2F;mclz&#x2F;filemanagement&#x2F;sightWordTemplate.xls&quot;;</span><br><span class="line">      document.body.appendChild(aTag);</span><br><span class="line">      aTag.click();</span><br><span class="line">    &#125;,</span><br><span class="line">    chooseFile() &#123;</span><br><span class="line">      let _this &#x3D; this;</span><br><span class="line">      let btnImport &#x3D; this.$refs.btnFile;</span><br><span class="line">      btnImport.click();</span><br><span class="line">      btnImport.onchange &#x3D; function() &#123;</span><br><span class="line">        _this.importData(btnImport.files);</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    importData(files) &#123;</span><br><span class="line">      if (files.length &gt; 0) &#123;</span><br><span class="line">        let fileName &#x3D; files[files.length - 1].name;</span><br><span class="line">        if (fileName.indexOf(&quot;.xls&quot;, fileName.length - &quot;.xls&quot;.length) &#x3D;&#x3D;&#x3D; -1) &#123;</span><br><span class="line">          this.$message.error(&#123;</span><br><span class="line">            showClose: true,</span><br><span class="line">            message: $t(&quot;sightWordImportDialog.EILEMESSAGEERROR&quot;)</span><br><span class="line">          &#125;);</span><br><span class="line">          this.$refs.btnFile.value &#x3D; &quot;&quot;;</span><br><span class="line">          return;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          if (files[files.length - 1].size &#x2F; 1024 &#x2F; 1024 &gt; 300) &#123;</span><br><span class="line">            this.$message.error(&#123;</span><br><span class="line">              showClose: true,</span><br><span class="line">              message: $t(&quot;sightWordImportDialog.FILESIZELESS300M&quot;)</span><br><span class="line">            &#125;);</span><br><span class="line">            this.$refs.btnFile.value &#x3D; &quot;&quot;;</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          this.uploadFileName &#x3D; fileName;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    upLoadFile() &#123;</span><br><span class="line">      let files &#x3D; this.$refs.btnFile.files;</span><br><span class="line">      if (files.length &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">        this.$message.error(&#123;</span><br><span class="line">          showClose: true,</span><br><span class="line">          message: $t(&quot;sightWordImportDialog.FILESIZELESS300M&quot;)</span><br><span class="line">        &#125;);</span><br><span class="line">        this.$refs.btnFile.value &#x3D; &quot;&quot;;</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      let header &#x3D; &#123;&#125;;</span><br><span class="line">      let params &#x3D; new FormData();</span><br><span class="line">      params.append(&quot;file&quot;, this.$refs.btnFile.files[files.length - 1]);</span><br><span class="line">      api.importData(params, response &#x3D;&gt; &#123;</span><br><span class="line">        if (response.data.statusCode &#x3D;&#x3D;&#x3D; &quot;API-COMMON-INF-OK&quot;) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            showClose: true,</span><br><span class="line">            message: $t(&quot;sightWordImportDialog.FILESIZELESS300M&quot;),</span><br><span class="line">            type: &quot;success&quot;</span><br><span class="line">          &#125;);</span><br><span class="line">          this.importDialogClose();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            showClose: true,</span><br><span class="line">            message: $t(&quot;sightWordImportDialog.FILESIZELESS300M&quot;),</span><br><span class="line">            type: &quot;error&quot;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        this.$refs.btnFile.value &#x3D; &quot;&quot;;</span><br><span class="line">        this.uploadFileName &#x3D; &quot;&quot;;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    removeFile() &#123;</span><br><span class="line">      this.$refs.btnFile.value &#x3D; &quot;&quot;;</span><br><span class="line">      this.uploadFileName &#x3D; &quot;&quot;;</span><br><span class="line">    &#125;,</span><br><span class="line">    importCancel() &#123;</span><br><span class="line">      this.importDialogClose();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>技能要求</title>
    <url>/2020/07/19/jobskill/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h2><p>工作职责<br>-负责企业智能平台部Web前端相关工作<br>-产品易用性改进和Web界面技术优化<br>-目标导向，通过与相关团队的配合推动业务目标的达成<br>-Web前沿技术研究和新技术调研并用于实践<br>任职要求<br>-拥有扎实的计算机基础，计算机或相关专业，2年及以上Web前端研发工作经历<br>-熟悉 W3C 标准，精通HTML5/CSS3，熟练掌握常见的页面布局方式，了解JS/CSS模块化开发<br>-熟练掌握 JavaScript，熟练使用 React/Vue 中的至少一种，掌握面向对象编程思想，对表现与数据分离有深刻理解<br>-熟练使用ES6，TypeScrip<br>-掌握常用的构建打包工具的配置方法，如 Webpack、Rollup、Gulp 等<br>-熟练使用各种调试、抓包工具，能独立分析、解决和归纳问题<br>-有出色的学习能力和强烈的进取心，有良好的沟通能力及执行力，有责任心，有一定的抗压能力<br>-熟悉PHP/NodeJs/HTML5开发，熟练使用Linux系统</p>
<h2 id="天融信"><a href="#天融信" class="headerlink" title="天融信"></a>天融信</h2><p>职位描述</p>
<ol>
<li>云安全，容器安全产品前端webui开发。</li>
<li>熟悉typescript，anglar框架。</li>
<li>熟悉echart，D3基础框架。</li>
<li>过过云平台，企业级to B产品web端开发经验更佳。</li>
</ol>
<h2 id="中科软"><a href="#中科软" class="headerlink" title="中科软"></a>中科软</h2><p>职位描述<br>要求<br>1、精通vue，java script,css，熟悉Type Script，，熟悉前后端对接，数据绑定，有GoJS这种流程图类前端开发经验者优先。<br>2、懂微信小程序相关技术;<br>3、1年以上前端项目开发经验，具有扎实的javascript基础；<br>4、有较强的分析问题和解决问题的能力。<br>5、本科及以上学历，学信网可查</p>
<h2 id="软通动力"><a href="#软通动力" class="headerlink" title="软通动力"></a>软通动力</h2><p>职位描述<br>Web开发工程师<br>工作职责<br>-百度爱番番产品PC/App Web前端功能模块的开发<br>-百度爱番番产品的易用性改进与性能优化<br>-百度爱番番产品开发框架的维护与升级<br>-Web前沿技术研究和新技术调研，并给出应用建议<br>任职资格<br>-计算机科学或相关专业毕业，3年以上工作经验<br>-精通HTML/XHTML、CSS，JavaScript等前端开发技术，至少熟悉React/Vue一种开发框架，熟悉VUE的优先。<br>-熟悉W3C标准，对表现与数据分离、HTML语义化，js异步编程有较深刻理解<br>-熟悉页面架构和布局，熟练使用less、stylus等css预编译框架<br>-具有一定的软件工程意识，对数据结构和算法设计有充分理解<br>-具有良好的沟通能力和团队合作精神、优秀的分析问题和解决问题的能力<br>-熟练使用grunt、webpack等进行开发以及项目构建<br>-有IOS/Android开发经验的优先，有Node.js开发经验的优先<br>-具有互联网广告从业经验或者IM经验的优先</p>
<h2 id="恒华"><a href="#恒华" class="headerlink" title="恒华"></a>恒华</h2><p>职位描述<br>技能要求：<br>Javascript，ES6标准，Css，VUE前端界面框架<br>岗位职责：<br>1、参与信息化系统及平台产品前端交互界面开发；<br>2、独立完成产品前端组件模块设计与开发工作；<br>3、根据后端接口完成前端交互逻辑对接；<br>4、参与产品定义及需求工作，独立完成页面视觉效果制作。<br>任职要求：<br>1、掌握Javascript、CSS、HMTL编程语言及面向对象编程；<br>2、熟练使用ES6标准规范，掌握前端工程构建技术；<br>3、掌握VUE前端界面框架。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>熟悉W3C标准，精通HTML5/CSS3，熟练掌握常见的页面布局方式，了解JS/CSS模块化开发</li>
<li>熟悉W3C标准，对表现与数据分离、HTML语义化，js异步编程有较深刻理解</li>
<li>熟练掌握 JavaScript，熟练使用 React/Vue 中的至少一种，掌握面向对象编程思想，对表现与数据分离有深刻理解</li>
<li>熟练使用ES6，TypeScrip</li>
<li>掌握常用的构建打包工具的配置方法，如 Webpack、Rollup、Gulp 等</li>
<li>熟悉页面架构和布局，熟练使用less、stylus等css预编译框架</li>
<li>熟练使用grunt、webpack等进行开发以及项目构建</li>
<li>有IOS/Android开发经验的优先，有Node.js开发经验的优先</li>
<li>具有一定的软件工程意识，对数据结构和算法设计有充分理解</li>
<li>熟练使用各种调试、抓包工具，能独立分析、解决和归纳问题</li>
<li>有出色的学习能力和强烈的进取心，有良好的沟通能力及执行力，有责任心，有一定的抗压能力</li>
<li>熟悉PHP/NodeJs/HTML5开发，熟练使用Linux系统</li>
<li>有GoJS这种流程图类前端开发经验者优先</li>
<li>懂微信小程序相关技术</li>
<li>熟悉PHP/NodeJs/HTML5开发，熟练使用Linux系统</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>近期总结前端知识</title>
    <url>/2020/07/30/tips/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="不同分辨率动态赋值"><a href="#不同分辨率动态赋值" class="headerlink" title="不同分辨率动态赋值"></a>不同分辨率动态赋值</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (window.innerWidth &gt; 1440) &#123;</span><br><span class="line">    this.dialogwidth &#x3D; &quot;27.5%&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    this.dialogwidth &#x3D; &quot;37%&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dialogwidth:&quot;&quot;</span><br></pre></td></tr></table></figure>

<h2 id="table批量删除选中行"><a href="#table批量删除选中行" class="headerlink" title="table批量删除选中行"></a>table批量删除选中行</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let rows &#x3D; this.$refs.tableRefName.getSelectAllRows();</span><br><span class="line">let ids &#x3D; [];</span><br><span class="line">rows.forEach(item &#x3D;&gt; ids.push(item.id));</span><br><span class="line">api.delete(ids,response&#x3D;&gt;&#123;&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="动态切换组件"><a href="#动态切换组件" class="headerlink" title="动态切换组件"></a>动态切换组件</h2><p><a href="https://blog.csdn.net/liangmengbk/article/details/85013547">https://blog.csdn.net/liangmengbk/article/details/85013547</a></p>
<h2 id="table组件-写columns-属性时render自定义内容"><a href="#table组件-写columns-属性时render自定义内容" class="headerlink" title="table组件 写columns 属性时render自定义内容"></a>table组件 写columns 属性时render自定义内容</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">prop: &quot;action&quot;,</span><br><span class="line">label: this.$t(&quot;noticePage.OPERATE&quot;),</span><br><span class="line">align: &quot;center&quot;,</span><br><span class="line">tableWidth: 260,</span><br><span class="line">render: (createElement, params) &#x3D;&gt; &#123;</span><br><span class="line">    return createElement(&quot;div&quot;, [</span><br><span class="line">        createElement(</span><br><span class="line">            &quot;td-button&quot;,</span><br><span class="line">            &#123;</span><br><span class="line">                style: &quot;min-width:25px !important&quot;,</span><br><span class="line">                attrs: &#123;</span><br><span class="line">                    type: &quot;text&quot;</span><br><span class="line">                &#125;,</span><br><span class="line"></span><br><span class="line">                on: &#123;</span><br><span class="line">                    click: _ &#x3D;&gt; &#123;</span><br><span class="line">                        this.openDialog(params.row);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;编辑&quot;</span><br><span class="line">        )</span><br><span class="line">    ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="日期组件"><a href="#日期组件" class="headerlink" title="日期组件"></a>日期组件</h2><ul>
<li>日期限制</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pickerBeginDateBefore: &#123;</span><br><span class="line">    disabledDate: time &#x3D;&gt; &#123;</span><br><span class="line">        let beginDateVal &#x3D; new Date(this.ruleForm.patrolEndTime).getTime();</span><br><span class="line">        if (beginDateVal) &#123;</span><br><span class="line">            return time.getTime() &gt; beginDateVal;   &#x2F;&#x2F;开始日期小于结束日期</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">pickerBeginDateAfter: &#123;</span><br><span class="line">    disabledDate: time &#x3D;&gt; &#123;</span><br><span class="line">        let beginDateVal &#x3D; new Date(this.ruleForm.patrolStartTime).getTime();</span><br><span class="line">        if (beginDateVal) &#123;</span><br><span class="line">            return (                &#x2F;&#x2F;结束日期大于开始日期且小于开始日期加7天</span><br><span class="line">                time.getTime() &lt; beginDateVal - 24 * 60 * 60 * 1000 ||</span><br><span class="line">                time.getTime() &gt; beginDateVal + 30 * 24 * 60 * 60 * 1000</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="拖拽"><a href="#拖拽" class="headerlink" title="拖拽"></a>拖拽</h2><p><a href="https://blog.csdn.net/weixin_41910848/article/details/82218243">https://blog.csdn.net/weixin_41910848/article/details/82218243</a></p>
<h2 id="添加和更新调同一个组件时的判断"><a href="#添加和更新调同一个组件时的判断" class="headerlink" title="添加和更新调同一个组件时的判断"></a>添加和更新调同一个组件时的判断</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (this.title &#x3D;&#x3D; &quot;添加&quot;) &#123;</span><br><span class="line">    this.addItems();</span><br><span class="line">    this.$nextTick(() &#x3D;&gt; &#123;</span><br><span class="line">        this.dialogClose();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    this.editItems();</span><br><span class="line">    this.$nextTick(() &#x3D;&gt; &#123;</span><br><span class="line">        this.dialogClose();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dialogClose() &#123;</span><br><span class="line">    this.$emit(&quot;changeVisible&quot;, false);  &#x2F;&#x2F;关闭</span><br><span class="line">    this.$emit(&quot;changeData&quot;);             &#x2F;&#x2F;刷新</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">schedulingListTemp.forEach((element) &#x3D;&gt; &#123;</span><br><span class="line">    var patrolUserIdTemp &#x3D; element.patrolUserId;</span><br><span class="line">    var item &#x3D; response.data.content.filter(</span><br><span class="line">      (t) &#x3D;&gt; t.id &#x3D;&#x3D; patrolUserIdTemp</span><br><span class="line">    );</span><br><span class="line">    if (item.length !&#x3D; 0) &#123;</span><br><span class="line">      var temp &#x3D; &#123;&#125;;</span><br><span class="line">      temp.patrolPName &#x3D; item[0].name;</span><br><span class="line">      temp.patrolPNameShow &#x3D;</span><br><span class="line">        item[0].name + &quot;(&quot; + item[0].personNo + &quot;)&quot;;</span><br><span class="line">      temp.patrolPeopleOrganizetion &#x3D; item[0].deptName;</span><br><span class="line">      temp.patrolRouteText &#x3D; element.patrolRouteText;</span><br><span class="line">      temp.patrolBeginTime &#x3D; element.patrolBeginTime;</span><br><span class="line">      temp.patrolEndTime &#x3D; element.patrolEndTime;</span><br><span class="line">      temp.patrolUserId &#x3D; element.patrolUserId;</span><br><span class="line">      temp.patrolLineId &#x3D; element.patrolLineId;</span><br><span class="line">      _this.schedulingList.push(temp);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      var temp2 &#x3D; &#123;&#125;;</span><br><span class="line">      temp2.patrolPName &#x3D; &quot;&quot;;</span><br><span class="line">      temp2.patrolPNameShow &#x3D; &quot;&quot;;</span><br><span class="line">      temp2.patrolPeopleOrganizetion &#x3D; &quot;&quot;;</span><br><span class="line">      temp2.patrolRouteText &#x3D; element.patrolRouteText;</span><br><span class="line">      temp2.patrolBeginTime &#x3D; element.patrolBeginTime;</span><br><span class="line">      temp2.patrolEndTime &#x3D; element.patrolEndTime;</span><br><span class="line">      temp2.patrolUserId &#x3D; element.patrolUserId;</span><br><span class="line">      temp2.patrolLineId &#x3D; element.patrolLineId;</span><br><span class="line">      _this.schedulingList.push(temp2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="添加和更新调同一个组件时的判断-1"><a href="#添加和更新调同一个组件时的判断-1" class="headerlink" title="添加和更新调同一个组件时的判断"></a>添加和更新调同一个组件时的判断</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (this.title &#x3D;&#x3D; &quot;添加&quot;) &#123;</span><br><span class="line">    this.addItems();</span><br><span class="line">    this.$nextTick(() &#x3D;&gt; &#123;</span><br><span class="line">        this.dialogClose();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    this.editItems();</span><br><span class="line">    this.$nextTick(() &#x3D;&gt; &#123;</span><br><span class="line">        this.dialogClose();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dialogClose() &#123;</span><br><span class="line">    this.$emit(&quot;changeVisible&quot;, false);  &#x2F;&#x2F;关闭</span><br><span class="line">    this.$emit(&quot;changeData&quot;);             &#x2F;&#x2F;刷新</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getCurrentDate () &#123;</span><br><span class="line">    var date &#x3D; new Date();</span><br><span class="line">    var year &#x3D; date.getFullYear();</span><br><span class="line">    var month &#x3D; date.getMonth() + 1;</span><br><span class="line">    var day &#x3D; date.getDate();</span><br><span class="line">    var hour &#x3D; date.getHours();</span><br><span class="line">    var minute &#x3D; date.getMinutes();</span><br><span class="line">    var second &#x3D; date.getSeconds();</span><br><span class="line">    if (month &lt; 10) &#123;</span><br><span class="line">        month &#x3D; &quot;0&quot; + month;</span><br><span class="line">    &#125;</span><br><span class="line">    if (day &lt; 10) &#123;</span><br><span class="line">        day &#x3D; &quot;0&quot; + day;</span><br><span class="line">    &#125;</span><br><span class="line">    if (hour &lt; 10) &#123;</span><br><span class="line">        hour &#x3D; &quot;0&quot; + hour;</span><br><span class="line">    &#125;</span><br><span class="line">    if (minute &lt; 10) &#123;</span><br><span class="line">        minute &#x3D; &quot;0&quot; + minute;</span><br><span class="line">    &#125;</span><br><span class="line">    if (second &lt; 10) &#123;</span><br><span class="line">        second &#x3D; &quot;0&quot; + second;</span><br><span class="line">    &#125;</span><br><span class="line">    var nowDate &#x3D;</span><br><span class="line">    year +</span><br><span class="line">    &quot;-&quot; +</span><br><span class="line">    month +</span><br><span class="line">    &quot;-&quot; +</span><br><span class="line">    day +</span><br><span class="line">    &quot; &quot; +</span><br><span class="line">    hour +</span><br><span class="line">    &quot;:&quot; +</span><br><span class="line">    minute +</span><br><span class="line">    &quot;:&quot; +</span><br><span class="line">    second;</span><br><span class="line">    return nowDate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>明天</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var tomrrowDay &#x3D; new Date(</span><br><span class="line">        new Date().setDate(new Date().getDate() + 1)</span><br><span class="line">      ).format(&quot;yyyy-MM-dd 00:00:00&quot;);</span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<h2 id="组件强制刷新技巧"><a href="#组件强制刷新技巧" class="headerlink" title="组件强制刷新技巧"></a>组件强制刷新技巧</h2><blockquote>
<p> 在实际开发过程中经常会遇到动态取值之后vue组件不能刷新的问题，解决办法就是利用v-if，改变状态，强制刷新</p>
</blockquote>
<ul>
<li>在要刷新的组件上定义v-if=”hackReset”</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">v-if&#x3D;&quot;hackReset&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>data里定义变量</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hackReset: true</span><br></pre></td></tr></table></figure>

<ul>
<li>在需要刷新的位置加上刷新代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">this.hackReset &#x3D; false;</span><br><span class="line">this.$nextTick(() &#x3D;&gt; &#123;</span><br><span class="line">    this.hackReset &#x3D; true;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="匹配拼接"><a href="#匹配拼接" class="headerlink" title="匹配拼接"></a>匹配拼接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for (var i &#x3D; 0; i &lt; _this.patrolPeople.length; i++) &#123;</span><br><span class="line">          if (_this.patrolPeople[i].patrolPName.match(_this.patrolUserName)) &#123;</span><br><span class="line">            userIdTempArray.push(_this.patrolPeople[i].patrolPId);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        userId &#x3D; userIdTempArray.join(&quot;,&quot;);</span><br><span class="line">        if (userId &#x3D;&#x3D;&#x3D; &quot;&quot;) &#123;</span><br><span class="line">          _this.schedulingList &#x3D; [];</span><br><span class="line">          _this.total &#x3D; 0;</span><br><span class="line">          return;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h2 id="object对象取key和value"><a href="#object对象取key和value" class="headerlink" title="object对象取key和value"></a>object对象取key和value</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">licenseN &#x3D; Object.keys(row.action.licenseNumberMap);</span><br><span class="line">                        statusN &#x3D; Object.values(row.action.licenseNumberMap);</span><br></pre></td></tr></table></figure>

<h2 id="table中列值动态赋样式"><a href="#table中列值动态赋样式" class="headerlink" title="table中列值动态赋样式"></a>table中列值动态赋样式</h2><ul>
<li>根据每一列alert0show,alert1show,alert3show的值来确定显示哪个图标</li>
<li>根据每一列patrolAlarm的值来设定文字的样式  （动态赋class,class里定义样式）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;el-table-column prop&#x3D;&quot;patrolAlarm&quot;  width&#x3D;&quot;148&quot; align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">    &lt;template slot-scope&#x3D;&quot;scope&quot;&gt;</span><br><span class="line">    &lt;i class&#x3D;&quot;el-icon-success&quot; v-show&#x3D;&quot;scope.row.alert0show&quot; style&#x3D;&quot;color:#7E9913&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;i class&#x3D;&quot;el-icon-warning&quot; v-show&#x3D;&quot;scope.row.alert1show&quot; style&#x3D;&quot;color:#FA4F4F&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;i class&#x3D;&quot;el-icon-time&quot; v-show&#x3D;&quot;scope.row.alert3show&quot; style&#x3D;&quot;color:#7E9913&quot;&gt;&lt;&#x2F;i&gt;&amp;nbsp;</span><br><span class="line">    &lt;span</span><br><span class="line">    :class&#x3D;&quot;((scope.row.patrolAlarm &#x3D;&#x3D;&#x3D; &#39;1&#39;) || (scope.row.patrolAlarm &#x3D;&#x3D;&#x3D; &#39;4&#39;) || (scope.row.patrolAlarm &#x3D;&#x3D;&#x3D; &#39;5&#39;)) ? &#39;redColor&#39;:&#39;greenColor&#39;&quot;</span><br><span class="line">    &gt;&#123;&#123;scope.row.sAlertType&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;template&gt;</span><br><span class="line">&lt;&#x2F;el-table-column&gt;</span><br></pre></td></tr></table></figure>

<h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">listUnique(array) &#123;</span><br><span class="line">      var r &#x3D; [];</span><br><span class="line">      for (var i &#x3D; 0, l &#x3D; array.length; i &lt; l; i++) &#123;</span><br><span class="line">        for (var j &#x3D; i + 1; j &lt; l; j++)</span><br><span class="line">          if (JSON.stringify(array[i]) &#x3D;&#x3D; JSON.stringify(array[j])) j &#x3D; ++i;</span><br><span class="line">        r.push(array[i]);</span><br><span class="line">      &#125;</span><br><span class="line">      return r;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unique(arr) &#123;</span><br><span class="line">      var hash &#x3D; [];</span><br><span class="line">      for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">        if (hash.indexOf(arr[i]) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">          hash.push(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      return hash;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>echarts的基础使用</title>
    <url>/2020/07/15/useecharts/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul>
<li>ECharts<ul>
<li>缩写来自Enterprise Charts,商业级数据图表,是百度的一个开源的数据可视化工具,一个纯Javascript的图表库</li>
</ul>
</li>
</ul>
<h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ol>
<li>进入官网<a href="https://www.echartsjs.com/zh/index.html">https://www.echartsjs.com/zh/index.html</a><br>选择定制下载，选择需要的组件下载对应的echarts.min.js</li>
<li>进入官方实例，找到自己想要的图，先在网页上进行修改<br>查看配置项手册，找到自己想要改的内容</li>
<li>配置项简介<ul>
<li><img src="/images/echarts.png" alt="avatar"></li>
</ul>
</li>
<li>一般格式：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   var myChart &#x3D; echarts.init(document.getElementById(&#39;组件id&#39;));</span><br><span class="line">var option&#x3D;&#123;&#125;;</span><br><span class="line">myChart.clear();</span><br><span class="line">myChart.setOption(option);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      myChart.off(&quot;click&quot;);</span><br><span class="line">      myChart.on(&quot;click&quot;, function(params) &#123;</span><br><span class="line">        if (params.componentType &#x3D;&#x3D; &quot;series&quot;) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure>


</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>vue基础知识</title>
    <url>/2020/07/29/vuebase/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="v-xxx"><a href="#v-xxx" class="headerlink" title="v-xxx"></a>v-xxx</h2><ul>
<li>v-html</li>
<li>v-bind</li>
<li>v-on</li>
<li>v-if</li>
<li>v-else</li>
<li>v-else-if</li>
<li>v-show</li>
<li>v-for</li>
<li>v-model<ul>
<li>V-model 双向绑定指的是 view（dom） 与 Model（Js对象）</li>
</ul>
</li>
<li>v-focus<ul>
<li>页面加载时，元素获得焦点</li>
</ul>
</li>
</ul>
<h2 id="computed与methods"><a href="#computed与methods" class="headerlink" title="computed与methods"></a>computed与methods</h2><p>computed与methods效果一样<br>但，computed基于他的缓存依赖，依赖发生改变时才会重新取值<br>而，methods在重新渲染时，总会重新调用执行<br>Computed将function与里面的值绑定，只有在值变化时才会触发content,<br>methods每次进入页面都会执行该方法</p>
<h2 id="Watch-监听"><a href="#Watch-监听" class="headerlink" title="Watch 监听"></a>Watch 监听</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">New vue(&#123;</span><br><span class="line">    El:&#39;#root&#39;,</span><br><span class="line">    Data:&#123;</span><br><span class="line">        cityName:&#39;&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    Watch:&#123;</span><br><span class="line">        cityName:&#123;</span><br><span class="line">            Handler(newName,oldName)&#123;</span><br><span class="line">     </span><br><span class="line">            &#125;,</span><br><span class="line">            Immediate:true    &#x2F;&#x2F;&#x2F;watch第一次绑定就执行，</span><br><span class="line">            Deep:true   &#x2F;&#x2F;&#x2F;深度监听--监听对象内部属性的改变</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><ul>
<li>全局组件<ul>
<li><xxx message="hello"></xxx><br>Vue.component(‘xxx’,{ props:[‘message’] template:’<h1>自定义组件</h1>‘})  //prop接受父组件数据参数，单向-父穿子，子不传父</li>
</ul>
</li>
<li>局部组件<ul>
<li>Components:{‘xxx’:Child}  //只能在这个实例中使用</li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>vue存储全局变量</title>
    <url>/2020/08/04/vue%E5%85%A8%E5%B1%80%E5%AD%98%E5%82%A8%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li>存</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">localStorage.setItem(&#39;存储的名字&#39;, 要存的数据)</span><br></pre></td></tr></table></figure>

<ul>
<li>取</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var xxx - localStorage.存储的名字</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>手撕vue源码-day-1</title>
    <url>/2020/08/04/%E6%89%8B%E6%92%95vue%E6%BA%90%E7%A0%81day01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Flow"><a href="#Flow" class="headerlink" title="Flow"></a>Flow</h2><ul>
<li><p>作用：静态类型检查</p>
<ul>
<li>什么是静态类型检查？在编译期尽早发现（由类型错误引起的）bug</li>
</ul>
</li>
<li><p>检查方法：</p>
<ul>
<li>直接向变量里传值来推断</li>
<li>写好类型注释，在向变量里传值 例：x: number</li>
</ul>
</li>
<li><p>遇到flow不认识的第三方库解决办法：<code>libdef</code> 的概念（没看懂=_=）</p>
</li>
</ul>
<blockquote>
<p>Weex：使用流行的Web开发体验来开发高性能原生应用（Android,IOS,Web）的框架</p>
</blockquote>
<h2 id="vue-js源码目录"><a href="#vue-js源码目录" class="headerlink" title="vue.js源码目录"></a>vue.js源码目录</h2><h3 id="compiler"><a href="#compiler" class="headerlink" title="compiler"></a>compiler</h3><blockquote>
<p>ast 语法树：抽象语法树，不依赖于具体的文法，不依赖于语言的细节</p>
</blockquote>
<p>包含vue.js所有编译相关的代码</p>
<h3 id="core"><a href="#core" class="headerlink" title="core"></a>core</h3><p>包含vue.js的核心代码：</p>
<ul>
<li><p>内置组件</p>
</li>
<li><p>全局API封装</p>
</li>
<li><p>Vue实例化</p>
</li>
<li><p>观察者</p>
</li>
<li><p>虚拟DOM</p>
</li>
<li><p>工具函数</p>
</li>
<li><p>等</p>
</li>
</ul>
<h3 id="platform"><a href="#platform" class="headerlink" title="platform"></a>platform</h3><p>Vue.js是跨平台的mvvm框架，可以跑在web上也可以配合weex跑在native客户端上</p>
<blockquote>
<p>native:原生app</p>
</blockquote>
<p>to be continue <a href="https://ustbhuangyi.github.io/vue-analysis/v2/prepare/directory.html#server">https://ustbhuangyi.github.io/vue-analysis/v2/prepare/directory.html#server</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo博客安装</title>
    <url>/2020/08/03/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><ul>
<li>node -v</li>
</ul>
<h3 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h3><ul>
<li>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></li>
</ul>
<h3 id="安装hexo组件，启动博客"><a href="#安装hexo组件，启动博客" class="headerlink" title="安装hexo组件，启动博客"></a>安装hexo组件，启动博客</h3><ol>
<li>cnpm install -g hexo-cli</li>
<li>mkdir blog </li>
<li>cd blog</li>
<li>hexo init</li>
<li>hexo s //启动</li>
<li>hexo n “xxx” //新建博文</li>
<li>hexo clean //清理一下</li>
<li>hexo g //重新生成一下</li>
<li>hexo s //再启动看效果</li>
</ol>
<h3 id="配到github"><a href="#配到github" class="headerlink" title="配到github"></a>配到github</h3><ol>
<li>注册github账号</li>
<li>new repository<br>名字必须是 github名.github.io</li>
<li>create</li>
<li>cnpm install –save hexo-deployer-git</li>
<li>编辑_config.yml<pre><code>最后一行，deploy:
type:git
repo: https://github.com/xxx/xxx.github.io.git
branch: master</code></pre>
</li>
<li>保存</li>
<li>hexo d</li>
<li>输入账号，密码</li>
<li>刷新，博客的内容就出来了</li>
<li>访问<a href="https://xxx.github.io/">https://xxx.github.io</a> 就能看见你的博客了</li>
</ol>
<h3 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h3><ol>
<li>在网上找到要的hexo主题的github地址</li>
<li>git clone xxxxx  themes/xxx</li>
<li>修改_config.yml</li>
<li>找到theme那一行<br>theme: xxx  </li>
<li>hexo clean </li>
<li>hexo g</li>
<li>hexo s<br>主题就上去了</li>
<li>hexo d<br>等一会儿，访问github.io就行了</li>
</ol>
]]></content>
  </entry>
</search>
